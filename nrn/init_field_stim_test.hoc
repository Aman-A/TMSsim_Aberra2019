{load_file("nrngui.hoc")}
strdef run_name, defineParams_filename
run_name = "test" //if not defined in call (included for testing)
strdef nrn_dir, run_dir
nrn_dir = getcwd()
sprint(run_dir,"%sparams/%s/",nrn_dir,run_name)
init_dt = 1e9 // defaults for steady state initialization
init_tstart = -1e11 // defaults for steady state initialization
proc loadFiles() {
	sprint(defineParams_filename,"params/%s/defineParams.hoc",run_name)
	{load_file(defineParams_filename)} // defines parameters
	{load_file("ssprocinit.hoc")}
	{load_file("interp_coordinates.hoc")}
	{load_file("setpointers.hoc")}
	{load_file("cell_chooser.hoc")}
	{load_file("edit_morphology.hoc")} // procs for editing cell morphology
	{load_file("get_es.hoc")} // analogue -> calcrxc.hoc
	{load_file("stim_wave_import.hoc")} // -> stim.hoc
	{load_file("saveDatavector.hoc")}
	{load_file("threshold_finder.hoc")} // threshold finder functions
	{load_file("O2d.hoc")}
	{load_file("run_stim.hoc")} // main model procs	
	{load_file("exportTree.hoc")}
	{load_file("plot_shape.hoc")}
}
loadFiles()
cell_chooser(cell_id,cell_model_name)
getes()	
init_record_spikes(spike_record_mode)
init_record_vm(vm_record_mode)
{load_file("rig_mat.ses")}
if (cell_rotated) {PlotShape[0].rotate(1,0,0,PI/2,0,0)}
PlotShape[0].exec_menu("Shape Plot")
PlotShape[0].exec_menu("View = plot")